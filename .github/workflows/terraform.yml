
name: 'terraform deployment to azure sandbox'

on:
  push:
    branches: [ "main" ]
  # pull_request:
  #   types:
  #     - opened
  #     - reopened
  #     - synchronize
  #     - unlocked
  workflow_dispatch: 


defaults:
  run:
    shell: bash

env:
  ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
  ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
  ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
  ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
  ROOT_PATH: 'terraform/environments/dev'

###

jobs:

  terraform_validate:
    name: 'Terraform Validate'
    runs-on: ubuntu-latest
    env:
      environment: development
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    
      - name: Terraform Init
        run: terraform init
        working-directory: ${{env.ROOT_PATH}}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ${{env.ROOT_PATH}}

  terraform_plan:
    name: 'Terraform Plan'
    needs: [terraform_validate]
    runs-on: ubuntu-latest
    env:
      environment: development

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init
        working-directory: ${{env.ROOT_PATH}}

      - name: Terraform Plan
        run: terraform plan -lock=false
        working-directory: ${{env.ROOT_PATH}}

  terraform_apply:
    name: 'Terraform Apply'
    needs: [terraform_plan]
    runs-on: ubuntu-latest
    env:
      environment: development

    defaults:
      run:
        shell: bash
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init
        working-directory: ${{env.ROOT_PATH}}

      - name: Terraform Apply
        run: terraform apply -auto-approve -lock=false
        working-directory: ${{env.ROOT_PATH}}
